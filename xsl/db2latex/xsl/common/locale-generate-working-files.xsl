<?xml version='1.0'?>
<!--############################################################################# 
|	$Id: locale-generate-working-files.xsl,v 1.1 2005/12/05 08:19:41 rpopov Exp $
|- #############################################################################
|	Author: Vitaly Ostanin <vyt@altlinux.ru>
|
|   PURPOSE:
|	This stylesheet doing parse source localization files from DB2LaTeX l10n 
|       and generate working l10n files.
|
| WARNING: this style works only with $lang.xml files. 
| WARNING: It doesn't sync l10n.xml l10n.dtd l10n.xsl
|
+ ############################################################################## -->

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                xmlns:l="http://docbook.sourceforge.net/xmlns/l10n/1.0"
                xmlns:exsl="http://exslt.org/common"
                extension-element-prefixes="exsl"
                version='1.0'>

  <xsl:variable name="docbook.common.path">http://docbook.sourceforge.net/release/xsl/current/common/</xsl:variable>

  <!-- This template work on each of languages, specified in DocBook l10n.xml -->
  <xsl:template match="l:l10n">
    <!-- Output working file -->
    <xsl:variable name="working-file" select="concat(@language,'.xml')"/>

    <xsl:if test="not(element-available('exsl:document'))">
      <xsl:message terminate="yes">
        <xsl:text>Error: this style requires support for extension 'exsl:document'</xsl:text>
      </xsl:message>
    </xsl:if>
    <exsl:document href="{$working-file}"
                   method="xml"
                   encoding="US-ASCII"
                   indent="yes">
      <xsl:comment>
This file is generated automatically. 
Do not edit this file by hand!
To update this file see original DocBook comments below.
If original DocBook l10n doesn't have needed key, edit
the corresponding source document: locale-source.$lang.xml
      </xsl:comment>
      <xsl:text>&#10;</xsl:text>
      <xsl:copy>
        <xsl:apply-templates select="@*|node()"/>
      </xsl:copy>
    </exsl:document>
  </xsl:template>

  <xsl:template match="@*|comment()|processing-instruction()">
    <xsl:copy/>
  </xsl:template>

  <xsl:template match="text()|@xml:base"/>

  <xsl:template match="*">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>

</xsl:stylesheet>
